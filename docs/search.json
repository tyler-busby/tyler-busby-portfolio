[
  {
    "objectID": "Portfolio_Project.html",
    "href": "Portfolio_Project.html",
    "title": "Portfolio Project",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggimage)\nlibrary(ggraph)\nlibrary(igraph)\n\n\nAttaching package: 'igraph'\n\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\nThe following object is masked from 'package:base':\n\n    union\n\nlibrary(ggridges)\n\n\nData Description\nThe data I will be using was gathered from user observations on iNaturalist, using the following website: https://www.inaturalist.org/observations/export.\nThe data focuses on nudibranch observations in Monterey Bay Marine Sanctuary from January 1st to December 31st, 2024. It covers all user-submitted observations of animals in the order Nudibranchia that are considered “research grade”, meaning the nudibranch ID was confirmed by at least one other user. The data also only includes observations marked as open, meaning they have an associated location.\nThe dataset includes a number of variables, including observation id variables: id, uuid, user_id, user_name, and url. Time and date variables for the observation, including observed_on, time_observed_at, and time_zone. There are also location variables: place_guess, latitude, longitude, and positional_accuracy. The main variables I will focus on have to do with the observation’s taxonomy including it’s common_name, scientific_name, taxon_genus_name, taxon_family_name, and more for every taxon delineation from suborder to form. The number of agreements and disagreements along with other information included by the observer, such as tag_list and description.\nMost of the data is character data, with the exception of observed_on, which is a date, and number_identification_agreements, number_identification_disagreements, latitude, longitude, and positional_accuracy, which are numerical variables.\nThe main questions I hope to answer with my data are:\n- What were the most commonly-observed nudibranch species in Monterey Bay in 2024?\n- How biodiverse were nudibranch populations in Monterey Bay in 2024?\n- How do nudibranch populations change in Monterey Bay over time?\n\n\nData Visualization\nTo answer my first research question, I want to make a bar chart of the 10 species with the highest number of observations. I will make it in order of frequency, allowing readers to easily determine which species have the highest and lowest number of observations.\nFor my second question, I want to make a dendrogram, containing each of the species divided into suborder, superfamily, family, genus, then species. This will help show the biodiversity of nudibranch observations in Monterey Bay by showing the number of different nudibranch families and species there are in Monterey Bay. This will not only show how many unique species live in Monterey Bay but also how they relate to one another.\nTo answer my final question, I want to make a ridgeline plot of all of the species of nudibranchs included to help show the overall trend of how nudibranch populations change by each month.\nTo create a few of these visualizations, I may have to summarize the data into observation counts for each species.\n\n\nData Cleaning\nThere is also some missing data in the common_name variable coded as blanks, as some species of nudibranchs do not have a common name in iNaturalist.\nBased on my goal, I will not need to filter my data nor join my data with any preexisting datasets.\nFor my first visualization, I will have to create a new variable in order to include images in my bar graph.\nThere are a few variables I will want to exclude from my dataset including the observation id variables and many of the taxon designation variables that are entirely NAs, such as taxon_tribe_name and taxon_hybrid_name.\nI will not need to pivot my data.\nAs stated in the Data Visualization section, I will have to summarize my data into total number of observations for each species in order to create some of my visualizations.\nOne other aspect I am going to want to fix has to do with the common_name variable, as I want to refer to most species of nudibranch by their common name; however, a few species of nudibranch do not have a common name. Thus, I want to find a way to set their common name to be the same as their scientific name or create an entirely new name variable that can use their scientific name in place of the common name.\n\nnudibranch &lt;- read_csv(\"data-raw/nudibranch-obs.csv\")\n\nRows: 9687 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (16): uuid, time_observed_at, time_zone, user_name, tag_list, descripti...\ndbl   (8): id, user_id, num_identification_agreements, num_identification_di...\nlgl   (8): taxon_supertribe_name, taxon_tribe_name, taxon_subtribe_name, tax...\ndate  (1): observed_on\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ntot_nudibranch &lt;- nudibranch |&gt; #creates new tot_nudibranch dataset\n  mutate(common_name = coalesce(common_name, scientific_name)) |&gt; #replaces nas in common name variable with scientific name\n  group_by(common_name) |&gt; #group by common_name\n  summarise(\"total_obs\" = length(common_name)) #summarizes total_obs as the number of each common name observation\n\ntot_nudibranch$image_file &lt;- paste0(\"data-raw/nudibranch-photos/\", \n                                     tot_nudibranch$common_name, \".png\") #creates image address variable for each common name (see below)\n\nwrite_csv(tot_nudibranch, file = 'data-clean/tot_nudibranchs.csv') #save new totals dataset as updated csv file\n\nThe code to add an image file on lines 76-77 were modeled using a tutorial from Dean Chereden on YouTube. CSE Citation:\nDean Chereden. Add IMAGES to Charts in RStudio [video]. Youtube. 2023 Apr 27, 8:16 minutes. [accessed 2025 May 1]. https://www.youtube.com/watch?app=desktop&v=Mt-lVqqZCVw.\n\ntot_nudibranch |&gt;\n  arrange(-total_obs) |&gt; #arrange by descending number of observations of each species\n  head(10) |&gt; #select only top 10 observations\n  ggplot(aes(x = total_obs, \n               y = fct_reorder(common_name, total_obs))) + #create plot with given aesthetics\n  geom_col(aes(fill = total_obs), \n           color = \"black\") + #create bar plot with color based on observation number\n  guides(fill = \"none\") + #remove legend\n  labs(x = \"Total Number of iNaturalist Observations in 2024\",\n       title = \"10 Most Common Nudibranch Species in Monterey Bay\") + #create descriptive labels\n  scale_x_continuous(expand = c(0,0), \n                     limits = c(0,1250),\n                     breaks = c(0, 200, 400, 600, 800, 1000, 1200)) + #resize x axis scale\n  geom_image(aes(image = image_file),\n             size = 0.16) + #insert image on each bar in the bar plot (see below)\n  theme_classic() + #set theme to classic\n  theme(axis.title.y = element_blank(), #remove y axis label\n        title = element_text(family = \"serif\"),\n        axis.text.x = element_text(family = \"serif\"),\n        axis.text.y = element_text(family = \"serif\")) + #change font for all texts\n  scale_fill_distiller(direction = 1) #change fill color to brewer blues\n\n\n\n\n\n\n\n\nThe code to add an image file on lines 101-102 were modeled using a tutorial from Dean Chereden on YouTube. CSE Citation:\nDean Chereden. Add IMAGES to Charts in RStudio [video]. Youtube. 2023 Apr 27, 8:16 minutes. [accessed 2025 May 1]. https://www.youtube.com/watch?app=desktop&v=Mt-lVqqZCVw.\n\nnudi1 &lt;- nudibranch |&gt; #creates nudi1 dataframe using mollusca as the origin and suborder as first group\n  select(iconic_taxon_name, taxon_suborder_name) |&gt; #picking only relevant variables\n  unique() |&gt; #selecting only each unique occurance\n  rename(\"from\" = iconic_taxon_name, \"to\" = taxon_suborder_name) #renaming variables for later cbind\n\nnudi2 &lt;- nudibranch |&gt;\n  select(taxon_suborder_name, taxon_superfamily_name) |&gt;\n  unique() |&gt;\n  rename(\"from\" = taxon_suborder_name, \"to\" = taxon_superfamily_name) #repeating above for suborder and superfamily\n\nnudi3 &lt;- nudibranch |&gt;\n  select(taxon_superfamily_name, taxon_family_name) |&gt;\n  unique() |&gt;\n  rename(\"from\" = taxon_superfamily_name, \"to\" = taxon_family_name) #repeating above for superfamily and family\n\nnudi4 &lt;- nudibranch |&gt;\n  select(taxon_family_name, taxon_genus_name) |&gt;\n  unique() |&gt;\n  rename(\"from\" = taxon_family_name, \"to\" = taxon_genus_name) #repeating above for family and genus\n\nnudi5 &lt;- nudibranch |&gt;\n  mutate(common_name = coalesce(common_name, scientific_name)) |&gt; #adding scientific to NA common names\n  select(taxon_genus_name, common_name) |&gt;\n  unique() |&gt;\n  rename(\"from\" = taxon_genus_name, \"to\" = common_name) #repeating above for genus and common name (species)\n\nnudi_edges &lt;- rbind(nudi1, nudi2, nudi3, nudi4, nudi5) #combining all 5 datasets into one edge dataset\n\n\nnudi_dendrogram &lt;- graph_from_data_frame(nudi_edges) #creating a graph object to be used in ggraph\n\nggraph(nudi_dendrogram, layout = 'dendrogram', circular = FALSE) + #creating dendrogram from nudi_dendrogram\n  geom_edge_diagonal() +\n  geom_node_text(aes(label=name, filter=leaf), \n                 angle=90 , \n                 hjust=1, \n                 nudge_y = -0.1, \n                 nudge_x = -0.15,\n                 size = 2) + #creates text object for each common name and aligns it with node point\n  geom_node_point(aes(filter=leaf) , alpha=0.6) + #creates node point at each end\n  ylim(-2.15, NA) + #expands y-axis vertically\n  theme_void() #sets theme to void\n\n\n\n\n\n\n\n\nThe code in the above 2 code chunks to create the dendrogram was modeled from a tutorial from the R Graph Gallery. CSE Citation:\nYan Holtz. c2016-2018. Dendrogram [Internet]. The R Graph Gallery. [updated 2025; cited 2025 May 15]. Available from: https://r-graph-gallery.com/dendrogram.html.\n\nmonthly_nudibranch &lt;- nudibranch |&gt; #creates new monthly_nudibranch dataset\n  mutate(common_name = coalesce(common_name, scientific_name), #replaces nas in common name variable with scientific name\n         month = month(observed_on, label = FALSE)) #summarizes total_obs as the number of each common name observation\n\n\nggplot(monthly_nudibranch, aes(x = month, y = common_name, fill = common_name)) +\n  geom_density_ridges(trim = TRUE, \n                      scale = 5) + \n  theme_ridges() + #create ridge plot with x of month and y of common_name\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_text(size = 1),\n        axis.text.x = element_text(size = 6,\n                                   family = \"serif\"),\n        axis.title.x = element_text(hjust = 0.5,\n                                    family = \"serif\"),\n        title = element_text(size = 10, \n                             family = \"serif\")) +  #change font and size for all texts\n  theme(legend.position = \"none\") + #remove legend\n  scale_x_continuous(expand = c(0,0),\n                     limits = c(1, 12),\n                     breaks = seq_along(month.name), \n                     labels = month.name) + #change scale of x axis\n  labs(y = \"\",\n       x = \"Month\",\n       title = \"Nudibranch Populations in the Monterey Bay by Month\",) + #add descriptive labels \n  scale_fill_viridis_d(option = \"mako\")\n\nWarning in geom_density_ridges(trim = TRUE, scale = 5): Ignoring unknown\nparameters: `trim`\n\n\nPicking joint bandwidth of 0.935"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Tyler Busby",
    "section": "",
    "text": "Tyler Busby is a student with a Major in Marine Science, Minor in Statistics, and Minor in Music at California State University, Monterey Bay."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Tyler Busby",
    "section": "Education",
    "text": "Education\nCalifornia State University, Monterey Bay | Seaside, CA\nB.S. in Marine Science | 2022 - present"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Tyler Busby",
    "section": "Experience",
    "text": "Experience\nMoss Landing Marine Labs | Research Volunteer | Sept 2024 - Dec 2024\nSeaWorld | Educator | May 2024 - Aug 2024, Dec 2024 - Jan 2025\nSea Otter Savvy | Sticker Evaluation Surveyor | Feb 2023 - May 2023"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "tyler-busby-portfolio",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]